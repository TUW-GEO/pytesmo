# This workflow will install Python dependencies and run tests on
# windows and linux systems with a variety of Python versions

# For more information see:
# https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Automated Tests

on:
  push:
  pull_request:
  workflow_dispatch:
  schedule: # only upstream, won't trigger on forks!
    - cron: '0 0 * * *' # daily
jobs:
  build:
    strategy:
      matrix:
        python-version: [ '3.8', '3.9', '3.10' ]
        os: ["ubuntu-latest", "windows-latest"]
        ymlfile: ["environment.yml"]
    name: Py${{ matrix.python-version }}@${{ matrix.os }}🐍
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true # does not work with self-hosted testdata
          fetch-depth: 0
      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
          auto-update-conda: true
          channel-priority: flexible
          python-version: ${{ matrix.python-version }}
          environment-file: ${{ matrix.ymlfile }}
          mamba-version: "*"
          activate-environment: pytesmo # todo: must match with name in environment.yml
          auto-activate-base: false
      - name: Print Infos
        shell: bash -l {0}
        run: |
          git status
          conda info -a
          conda list
          pip list
          which pip
          which python
      - name: Export Environment
        shell: bash -l {0}
        run: |
          mkdir -p .artifacts
          # Here we could exclude pinned environments (not used):
          if [ ${{ matrix.ymlfile }} == "environment.yml" ]
          then
              filename=env_py${{ matrix.python-version }}_${{ matrix.os }}.yml
              conda env export --no-builds | grep -v "prefix" > .artifacts/$filename
          fi
      - name: Install package and test
        shell: bash -l {0}
        run: |
          pip install -e .
          pytest --cache-clear
      - name: Upload Coverage
        shell: bash -l {0}
        run: |
          pip install coveralls && coveralls --service=github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: ${{ matrix.python-version }}
          COVERALLS_PARALLEL: true
      - name: Create wheel and dist package
        shell: bash -l {0}
        run: |
          git status
          pip install setuptools_scm
          if [ ${{ matrix.os }} == "windows-latest" ]
          then
            # build whls on windows
            pip install wheel
            python setup.py bdist_wheel --dist-dir .artifacts/dist
          else
            # build dist on linux
            python setup.py sdist --dist-dir .artifacts/dist
          fi
          ls .artifacts/dist
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Artifacts
          path: .artifacts/*
  coveralls:
    name: Submit Coveralls 👚
    needs: build
    runs-on: ubuntu-latest
    container: python:3-slim
    steps:
      - name: Finished
        run: |
          pip3 install --upgrade coveralls && coveralls --service=github --finish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  publish:
    name: Upload to PyPI
    if: |
      startsWith(github.ref, 'refs/tags/v') &&
      startsWith(github.repository, 'TUW-GEO')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Print environment variables
        run: |
          echo "GITHUB_REF = $GITHUB_REF"
          echo "GITHUB_REPOSITORY = $GITHUB_REPOSITORY"
      - name: Download Artifacts
        uses: actions/download-artifact@v2
      - name: Display downloaded files
        run: ls -aR
      - name: Upload to PyPI
        uses: pypa/gh-action-pypi-publish@v1.4.1
        with:
          skip_existing: true
          verbose: true
          verify_metadata: true
          packages_dir: Artifacts/dist/
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }} # this needs to be uploaded to github actions secrets
